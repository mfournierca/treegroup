test_Tre.        test_AddUnit     DEBUG		
test_Tre.        test_AddUnit     DEBUG		
test_Tre.        test_AddUnit     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d150>	node2: <Element _ at 169d1b0>
    Tree.                 add     DEBUG		testing: <Element c at 169d2d0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d240>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169d2a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d270>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d1e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 169d150>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d420>	node2: <Element _ at 169d480>
    Tree.                 add     DEBUG		testing: <Element c at 169d5a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d510>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169d570>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d540>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d4b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 169d420>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 169d660>	node2: <Element a at 169d600>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element b at 169d750>
    Tree.                 add     DEBUG			parent1: <Element a at 169d660>
    Tree.                 add     DEBUG			position3: [1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element b at 169d780>
    Tree.                 add     DEBUG			parent1: <Element a at 169d660>
    Tree.                 add     DEBUG			position3: [1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element c at 169d7b0>
    Tree.                 add     DEBUG			parent1: <Element b at 169d780>
    Tree.                 add     DEBUG			position3: [1, 2, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element d at 169d840>
    Tree.                 add     DEBUG			parent1: <Element c at 169d7b0>
    Tree.                 add     DEBUG			position3: [1, 2, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element c at 169d870>
    Tree.                 add     DEBUG			parent1: <Element b at 169d840>
    Tree.                 add     DEBUG			position3: [1, 2, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		testing: <Element c at 169d870>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d8d0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169d8a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d840>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d7b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 169d660>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_ComplexTrees_Eq     DEBUG		
test_Tre.test_ComplexTrees_Eq     DEBUG		
test_Tre.test_ComplexTrees_Eq     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d750>	node2: <Element b at 169d900>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d9f0>	node2: <Element c at 169d960>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d9c0>	node2: <Element c at 169d990>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 169da50>	node2: <Element d at 169da20>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 169dab0>	node2: <Element e at 169da80>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 169db10>	node2: <Element d at 169dae0>
    Tree.                 add     DEBUG		testing: <Element g at 169db10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element i at 169dab0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169da50>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169d9c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169d9f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169d750>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169dc60>	node2: <Element b at 169dcc0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169ddb0>	node2: <Element c at 169dd20>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169dd80>	node2: <Element c at 169dd50>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 169de10>	node2: <Element d at 169dde0>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 169de70>	node2: <Element e at 169de40>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 169ded0>	node2: <Element d at 169dea0>
    Tree.                 add     DEBUG		testing: <Element g at 169ded0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element i at 169de70>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169de10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169dd80>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169ddb0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169dc60>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169df90>	node2: <Element a at 169df30>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa0c0>	node2: <Element b at 16aa030>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa090>	node2: <Element b at 16aa060>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 16aa120>	node2: <Element c at 16aa0f0>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element e at 16aa180>	node2: <Element d at 16aa150>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 16aa1e0>	node2: <Element c at 16aa1b0>
    Tree.                 add     DEBUG		testing: <Element g at 16aa1e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element i at 16aa180>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16aa120>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa090>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa0c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169df90>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_ComplexTrees_Se     DEBUG		
test_Tre.test_ComplexTrees_Se     DEBUG		
test_Tre.test_ComplexTrees_Se     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa210>	node2: <Element a at 16aa270>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa330>	node2: <Element _ at 16aa2a0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa360>	node2: <Element _ at 16aa2d0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 1, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16aa3f0>
    Tree.                 add     DEBUG			parent1: <Element c at 16aa360>
    Tree.                 add     DEBUG			position3: [1, 1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element c at 16aa420>
    Tree.                 add     DEBUG			parent1: <Element b at 16aa330>
    Tree.                 add     DEBUG			position3: [1, 1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2]]
    Tree.                 add     DEBUG		testing: <Element b at 16aa450>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa420>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aa3f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa360>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16aa330>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa210>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa570>	node2: <Element a at 16aa5d0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa690>	node2: <Element _ at 16aa600>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa6c0>	node2: <Element _ at 16aa630>
    Tree.                 add     DEBUG		index: 3	position2: [1, 1, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16aa750>
    Tree.                 add     DEBUG			parent1: <Element c at 16aa6c0>
    Tree.                 add     DEBUG			position3: [1, 1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element c at 16aa780>
    Tree.                 add     DEBUG			parent1: <Element b at 16aa690>
    Tree.                 add     DEBUG			position3: [1, 1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2]]
    Tree.                 add     DEBUG		testing: <Element b at 16aa7b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa780>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aa750>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa6c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16aa690>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa570>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 16aa840>	node2: <Element b at 16aa7e0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16aa870>	node2: <Element b at 16aa8d0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16aa930>	node2: <Element c at 16aa8a0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element b at 16aa9c0>
    Tree.                 add     DEBUG			parent1: <Element c at 16aa840>
    Tree.                 add     DEBUG			position3: [1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 1, 1, 1], [1, 1, 2]]
    Tree.                 add     DEBUG		testing: <Element b at 16aa9c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa9f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aa990>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa930>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16aa870>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa840>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_ComplexTrees_Tr     DEBUG		
test_Tre.test_ComplexTrees_Tr     DEBUG		
test_Tre.test_ComplexTrees_Tr     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa6f0>	node2: <Element a at 16aa960>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aaa20>	node2: <Element Y at 16aaa80>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aaab0>	node2: <Element _ at 16aaa50>
    Tree.                 add     DEBUG		index: 3	position2: [1, 1, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16aab70>
    Tree.                 add     DEBUG			parent1: <Element c at 16aaab0>
    Tree.                 add     DEBUG			position3: [1, 1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element c at 16aaba0>
    Tree.                 add     DEBUG			parent1: <Element _ at 16aaa20>
    Tree.                 add     DEBUG			position3: [1, 1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element e at 16aab40>	node2: <Element V at 16aab70>
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element f at 16aac00>	node2: <Element U at 16aabd0>
    Tree.                 add     DEBUG		index: 7	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element g at 16aac60>	node2: <Element T at 16aac30>
    Tree.                 add     DEBUG		index: 8	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element f at 16aacc0>	node2: <Element U at 16aac90>
    Tree.                 add     DEBUG		testing: <Element _ at 16aacc0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aacc0>
    Tree.                 add     DEBUG		testing: <Element _ at 16aac60>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aac60>
    Tree.                 add     DEBUG		testing: <Element _ at 16aac00>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aac00>
    Tree.                 add     DEBUG		testing: <Element _ at 16aab40>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aab40>
    Tree.                 add     DEBUG		testing: <Element c at 16aaba0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aacf0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aaab0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16aaa20>
    Tree.                 add     DEBUG			length is not 0, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa6f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aae10>	node2: <Element a at 16aae70>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aaea0>	node2: <Element Y at 16aaf00>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aaf30>	node2: <Element _ at 16aaed0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 1, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16a5030>
    Tree.                 add     DEBUG			parent1: <Element c at 16aaf30>
    Tree.                 add     DEBUG			position3: [1, 1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element c at 16a5060>
    Tree.                 add     DEBUG			parent1: <Element _ at 16aaea0>
    Tree.                 add     DEBUG			position3: [1, 1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element e at 16aafc0>	node2: <Element V at 16aaed0>
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element f at 16aadb0>	node2: <Element U at 16aaf00>
    Tree.                 add     DEBUG		index: 7	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element g at 16aa660>	node2: <Element T at 16aad80>
    Tree.                 add     DEBUG		index: 8	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element f at 16aad50>	node2: <Element U at 16aaba0>
    Tree.                 add     DEBUG		testing: <Element _ at 16aad50>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aad50>
    Tree.                 add     DEBUG		testing: <Element _ at 16aa660>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aa660>
    Tree.                 add     DEBUG		testing: <Element _ at 16aadb0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aadb0>
    Tree.                 add     DEBUG		testing: <Element _ at 16aafc0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aafc0>
    Tree.                 add     DEBUG		testing: <Element c at 16a5060>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aad20>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aaf30>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16aaea0>
    Tree.                 add     DEBUG			length is not 0, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aae10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 16aab40>	node2: <Element b at 16aac00>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16aaab0>	node2: <Element b at 16aab70>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16aaa20>	node2: <Element c at 16aaa50>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 5, adding nodes
    Tree.                 add     DEBUG			node1: <Element V at 16aa6f0>	node2: <Element e at 16aa960>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 6, adding nodes
    Tree.                 add     DEBUG			node1: <Element U at 16aa810>	node2: <Element f at 16aa9c0>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 7, adding nodes
    Tree.                 add     DEBUG			node1: <Element T at 16aa990>	node2: <Element g at 16aa9f0>
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 8, adding nodes
    Tree.                 add     DEBUG			node1: <Element U at 16aa8a0>	node2: <Element f at 16aa930>
    Tree.                 add     DEBUG		testing: <Element _ at 16aa8a0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aa8a0>
    Tree.                 add     DEBUG		testing: <Element _ at 16aa990>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aa990>
    Tree.                 add     DEBUG		testing: <Element _ at 16aa810>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aa810>
    Tree.                 add     DEBUG		testing: <Element _ at 16aa6f0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16aa6f0>
    Tree.                 add     DEBUG		testing: <Element c at 16aa870>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aa720>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aaa20>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16aaab0>
    Tree.                 add     DEBUG			length is not 0, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aab40>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_ComplexTrees_Un     DEBUG		
test_Tre.test_ComplexTrees_Un     DEBUG		
test_Tre.test_ComplexTrees_Un     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aaf90>	node2: <Element a at 16aa8d0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa750>	node2: <Element _ at 16aa7e0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa7b0>	node2: <Element b at 16aa840>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 16aa6c0>	node2: <Element c at 16aa540>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16aa690>
    Tree.                 add     DEBUG			parent1: <Element g at 16aa6c0>
    Tree.                 add     DEBUG			position3: [1, 2, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 16aa630>	node2: <Element c at 16aa5a0>
    Tree.                 add     DEBUG		index: 6	position2: [1, 3]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element e at 16aa570>
    Tree.                 add     DEBUG			parent1: <Element c at 16aaf90>
    Tree.                 add     DEBUG			position3: [1, 3]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3]]
    Tree.                 add     DEBUG		index: 7	position2: [1, 3, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 16aa510>
    Tree.                 add     DEBUG			parent1: <Element e at 16aa570>
    Tree.                 add     DEBUG			position3: [1, 3, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1]]
    Tree.                 add     DEBUG		index: 8	position2: [1, 3, 1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element g at 16aa420>
    Tree.                 add     DEBUG			parent1: <Element f at 16aa510>
    Tree.                 add     DEBUG			position3: [1, 3, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1]]
    Tree.                 add     DEBUG		index: 9	position2: [1, 3, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 16aa480>
    Tree.                 add     DEBUG			parent1: <Element e at 16aa420>
    Tree.                 add     DEBUG			position3: [1, 3, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		testing: <Element f at 16aa480>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16aa3f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element f at 16aa450>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa420>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16aa630>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16aa510>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16aa6c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa7b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa750>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aaf90>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16aa180>	node2: <Element a at 16aa120>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa060>	node2: <Element _ at 16aa090>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16aa0c0>	node2: <Element b at 16aa0f0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 169dfc0>	node2: <Element c at 169d930>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 169df00>
    Tree.                 add     DEBUG			parent1: <Element g at 169dfc0>
    Tree.                 add     DEBUG			position3: [1, 2, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 169dcf0>	node2: <Element c at 169df60>
    Tree.                 add     DEBUG		index: 6	position2: [1, 3]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element e at 169ded0>
    Tree.                 add     DEBUG			parent1: <Element c at 16aa180>
    Tree.                 add     DEBUG			position3: [1, 3]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3]]
    Tree.                 add     DEBUG		index: 7	position2: [1, 3, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 169dc30>
    Tree.                 add     DEBUG			parent1: <Element e at 169ded0>
    Tree.                 add     DEBUG			position3: [1, 3, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1]]
    Tree.                 add     DEBUG		index: 8	position2: [1, 3, 1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element g at 169de70>
    Tree.                 add     DEBUG			parent1: <Element f at 169dc30>
    Tree.                 add     DEBUG			position3: [1, 3, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1]]
    Tree.                 add     DEBUG		index: 9	position2: [1, 3, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 169de40>
    Tree.                 add     DEBUG			parent1: <Element e at 169de70>
    Tree.                 add     DEBUG			position3: [1, 3, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		testing: <Element f at 169de40>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169dde0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element f at 169de10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169de70>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169dcf0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169dc30>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169dfc0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa0c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa060>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16aa180>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169dd20>	node2: <Element b at 169dd50>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 169dba0>	node2: <Element c at 169dbd0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169dc60>	node2: <Element c at 169dcc0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 169db40>	node2: <Element d at 169d210>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 5, adding nodes
    Tree.                 add     DEBUG			node1: <Element c at 169db10>	node2: <Element d at 169db70>
    Tree.                 add     DEBUG		testing: <Element f at 169da80>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169dab0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element f at 169d780>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169dae0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169db10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d6c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 169db40>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169dc60>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169dba0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 169dd20>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_SimpleTrees_Equ     DEBUG		
test_Tre.test_SimpleTrees_Equ     DEBUG		
test_Tre.test_SimpleTrees_Equ     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 16aa030>	node2: <Element d at 169ded0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169da20>	node2: <Element e at 169da50>
    Tree.                 add     DEBUG		testing: <Element g at 169da20>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 16aa030>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d9f0>	node2: <Element d at 169d900>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d8a0>	node2: <Element e at 169d4e0>
    Tree.                 add     DEBUG		testing: <Element g at 169d8a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169d9f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 169d870>	node2: <Element a at 169d7b0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element e at 169d5d0>	node2: <Element b at 169d810>
    Tree.                 add     DEBUG		testing: <Element g at 169d5d0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element e at 169d870>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.test_SimpleTrees_Une     DEBUG		
test_Tre.test_SimpleTrees_Une     DEBUG		
test_Tre.test_SimpleTrees_Une     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d7e0>	node2: <Element a at 169d720>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d600>	node2: <Element b at 169d690>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element g at 169d4b0>
    Tree.                 add     DEBUG			parent1: <Element b at 169d7e0>
    Tree.                 add     DEBUG			position3: [1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		testing: <Element g at 169d4b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d600>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d7e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d510>	node2: <Element a at 169d450>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d390>	node2: <Element b at 169d420>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element g at 169d330>
    Tree.                 add     DEBUG			parent1: <Element b at 169d510>
    Tree.                 add     DEBUG			position3: [1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		testing: <Element g at 169d330>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d390>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d510>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 169d2a0>	node2: <Element a at 169d300>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 169d2d0>	node2: <Element b at 169d1e0>
    Tree.                 add     DEBUG		testing: <Element g at 169d1b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 169d2d0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 169d2a0>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.       test_Subtrees     DEBUG		
test_Tre.       test_Subtrees     DEBUG		
test_Tre.       test_Subtrees     DEBUG		starting test_Subtrees
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 164c450>	node2: <Element Y at 16ad030>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16ad060>	node2: <Element _ at 16ad090>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element d at 16ad150>
    Tree.                 add     DEBUG			parent1: <Element c at 16ad060>
    Tree.                 add     DEBUG			position3: [1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1]]
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element c at 16ad1e0>
    Tree.                 add     DEBUG			parent1: <Element _ at 164c450>
    Tree.                 add     DEBUG			position3: [1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		testing: <Element c at 16ad1e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16ad1b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16ad060>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 164c450>
    Tree.                 add     DEBUG			length is not 0, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 164c780>	node2: <Element b at 16ad300>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16ad330>	node2: <Element c at 16ad360>
    Tree.                 add     DEBUG		testing: <Element c at 16ad3f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16ad3c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16ad330>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 164c780>
    Tree.                 add     DEBUG			length is not 0, skip
test_Tre.  test_TreeToSubtree     DEBUG		
test_Tre.  test_TreeToSubtree     DEBUG		
test_Tre.  test_TreeToSubtree     DEBUG		starting test_TreeToSubtree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16ad450>	node2: <Element b at 16ad2d0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16ad510>	node2: <Element b at 16ad4b0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element d at 16ad4e0>	node2: <Element c at 16ad540>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16ad5a0>	node2: <Element e at 16ad570>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 16ad630>
    Tree.                 add     DEBUG			parent1: <Element h at 16ad5a0>
    Tree.                 add     DEBUG			position3: [1, 2, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element g at 16ad6c0>
    Tree.                 add     DEBUG			parent1: <Element f at 16ad630>
    Tree.                 add     DEBUG			position3: [1, 2, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1]]
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 2]
    Tree.                 add     DEBUG			index == len(ordering1)
    Tree.                 add     DEBUG			node3: <Element f at 16ad720>
    Tree.                 add     DEBUG			parent1: <Element h at 16ad5a0>
    Tree.                 add     DEBUG			position3: [1, 2, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		testing: <Element f at 16ad720>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16ad6c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element f at 16ad630>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element h at 16ad5a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16ad4e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16ad510>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16ad450>
    Tree.                 add     DEBUG			attributes not blank, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16ad8a0>	node2: <Element Y at 16ad420>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16ad990>	node2: <Element _ at 16ad960>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16ad930>	node2: <Element d at 16ad9f0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element e at 16ada50>	node2: <Element c at 16ada20>
    Tree.                 add     DEBUG		testing: <Element f at 16adae0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16adab0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element f at 16ada80>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element h at 16ada50>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element g at 16ad930>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16ad990>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16ad8a0>
    Tree.                 add     DEBUG			attributes not blank, skip
test_Tre.  test_TreesWithText     DEBUG		
test_Tre.  test_TreesWithText     DEBUG		
test_Tre.  test_TreesWithText     DEBUG		starting test_TreesWithText
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element b at 16ad9c0>	node2: <Element a at 16adb10>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 16adb40>	node2: <Element Y at 16adba0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element c at 16adbd0>	node2: <Element _ at 16adb70>
    Tree.                 add     DEBUG		index: 3	position2: [1, 1, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element d at 16adc90>
    Tree.                 add     DEBUG			parent1: <Element c at 16adbd0>
    Tree.                 add     DEBUG			position3: [1, 1, 1, 1]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 4	position2: [1, 1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			node3: <Element c at 16adcc0>
    Tree.                 add     DEBUG			parent1: <Element Z at 16adb40>
    Tree.                 add     DEBUG			position3: [1, 1, 2]
    Tree.                 add     DEBUG			ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 5	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element f at 16adc60>	node2: <Element V at 16adc90>
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element g at 16add20>	node2: <Element U at 16adcf0>
    Tree.                 add     DEBUG		index: 7	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element i at 16add80>	node2: <Element T at 16add50>
    Tree.                 add     DEBUG		index: 8	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element g at 16adde0>	node2: <Element U at 16addb0>
    Tree.                 add     DEBUG		testing: <Element a at 16adde0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16add80>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 16add20>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 16adc60>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16adcc0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16ade10>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16adbd0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element Z at 16adb40>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16ad9c0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 1, 1], [1, 1, 1, 1], [1, 1, 2], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element a at 16b3090>	node2: <Element b at 16b3030>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16b30f0>	node2: <Element a at 16b30c0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16b3150>	node2: <Element c at 16b3120>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 5, adding nodes
    Tree.                 add     DEBUG			node1: <Element V at 16b31e0>	node2: <Element f at 16b31b0>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 6, adding nodes
    Tree.                 add     DEBUG			node1: <Element U at 16b3240>	node2: <Element g at 16b3210>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 7, adding nodes
    Tree.                 add     DEBUG			node1: <Element T at 16b32a0>	node2: <Element i at 16b3270>
    Tree.                 add     DEBUG		index: 6	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 != ordering1[index]
    Tree.                 add     DEBUG			found position2 in ordering1 at index 8, adding nodes
    Tree.                 add     DEBUG			node1: <Element U at 16b3300>	node2: <Element g at 16b32d0>
    Tree.                 add     DEBUG		testing: <Element a at 16b3300>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element b at 16b32a0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 16b3240>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element a at 16b31e0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16b3360>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element d at 16b3330>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16b3150>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element Z at 16b30f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element c at 16b3090>
    Tree.                 add     DEBUG			tag is not _, skip
test_Tre.    test_ComplexTree     DEBUG		
test_Tre.    test_ComplexTree     DEBUG		
test_Tre.    test_ComplexTree     DEBUG		starting TreeGroup.Tree.test_Tree
test_Tre.test_InverseAddition     DEBUG		
test_Tre.test_InverseAddition     DEBUG		
test_Tre.test_InverseAddition     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 3], [1, 3, 1], [1, 3, 1, 1], [1, 3, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Z at 16b3c00>	node2: <Element a at 16b3ba0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element _ at 16b3b70>	node2: <Element _ at 16b38a0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16b3b40>	node2: <Element b at 16b38d0>
    Tree.                 add     DEBUG		index: 3	position2: [1, 3]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16b3b10>	node2: <Element b at 16b3930>
    Tree.                 add     DEBUG		index: 4	position2: [1, 3, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element X at 16b39f0>	node2: <Element c at 16b3960>
    Tree.                 add     DEBUG		index: 5	position2: [1, 3, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element W at 16b3a80>	node2: <Element d at 16b3ab0>
    Tree.                 add     DEBUG		index: 6	position2: [1, 3, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element X at 16b3a50>	node2: <Element c at 16b39c0>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3a50>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3a50>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3a80>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3a80>
    Tree.                 add     DEBUG		testing: <Element _ at 16b39f0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b39f0>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3b10>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3b10>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3b40>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3b40>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3b70>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3b70>
    Tree.                 add     DEBUG		testing: <Element _ at 16b3c00>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3c00>
test_Tre.     test_SimpleTree     DEBUG		
test_Tre.     test_SimpleTree     DEBUG		
test_Tre.     test_SimpleTree     DEBUG		starting TreeGroup.Tree.test_Tree
test_Tre.        test_Subtree     DEBUG		
test_Tre.        test_Subtree     DEBUG		
test_Tre.        test_Subtree     DEBUG		starting TreeGroup.Tree.test_Tree
test_Tre.       test_UnitTree     DEBUG		
test_Tre.       test_UnitTree     DEBUG		
test_Tre.       test_UnitTree     DEBUG		starting TreeGroup.Tree.test_Tree
    Tree.                 add     DEBUG		ordering1: [[1]]
    Tree.                 add     DEBUG		ordering2: [[1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16b3270>	node2: <Element a at 16b3330>
    Tree.                 add     DEBUG		testing: <Element Z at 16b3270>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2], [1, 3]]
    Tree.                 add     DEBUG		ordering2: [[1], [1, 1], [1, 2], [1, 2, 1], [1, 2, 1, 1], [1, 2, 2]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element I at 16b31b0>	node2: <Element a at 16b32d0>
    Tree.                 add     DEBUG		index: 1	position2: [1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Y at 16b3150>	node2: <Element b at 16adfc0>
    Tree.                 add     DEBUG		index: 2	position2: [1, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element X at 16b3120>	node2: <Element b at 16adf60>
    Tree.                 add     DEBUG		index: 3	position2: [1, 2, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element W at 16b30f0>	node2: <Element c at 16adf30>
    Tree.                 add     DEBUG		index: 4	position2: [1, 2, 1, 1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element W at 16b30c0>	node2: <Element d at 16ad480>
    Tree.                 add     DEBUG		index: 5	position2: [1, 2, 2]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element X at 16b3090>	node2: <Element c at 16adf00>
    Tree.                 add     DEBUG		testing: <Element ULITLLWNVZHFIV at 16b3030>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16b3090>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3090>
    Tree.                 add     DEBUG		testing: <Element _ at 16b30c0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b30c0>
    Tree.                 add     DEBUG		testing: <Element Z at 16b30f0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element Z at 16b3120>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		testing: <Element _ at 16b3150>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16b3150>
    Tree.                 add     DEBUG		testing: <Element J at 16b31b0>
    Tree.                 add     DEBUG			tag is not _, skip
    Tree.                 add     DEBUG		ordering1: [[1]]
    Tree.                 add     DEBUG		ordering2: [[1]]
    Tree.                 add     DEBUG		index: 0	position2: [1]
    Tree.                 add     DEBUG			position2 == ordering1[index], add elements
    Tree.                 add     DEBUG			node1: <Element Z at 16ad6f0>	node2: <Element a at 16b3300>
    Tree.                 add     DEBUG		testing: <Element _ at 16ad6f0>
    Tree.                 add     DEBUG		removing unit node: <Element _ at 16ad6f0>
